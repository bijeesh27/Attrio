<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <title>Attiro Fashions</title>
    <link rel="icon" type="image/png" href="user/assets/img/favicon.png" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link rel="stylesheet" href="/user/assets/css/substyle.css" />
  </head>
  <body>
    <div class="bg-wrapper">
      <div class="blur-overlay">
        <div class="password-container">
          <section class="password-area">
            <div class="password-content">
              <div class="key-icon">
                <i class="fas fa-key"></i>
              </div>
              <h2>Set New Password</h2>
              <p>Please create a strong password for your account</p>

              <form class="password-form" action="#" method="post">
                <div class="password-wrapper">
                  <input
                    type="password"
                    id="newPassword"
                    class="form-control"
                    placeholder="New password"
                    name="newPassword"
                    required
                  />
                  <span class="toggle-password" toggle="#newPassword">
                    <i class="far fa-eye"></i>
                  </span>
                </div>

                <div class="password-strength">
                  <div class="password-strength-meter" id="strengthMeter"></div>
                </div>
                <div class="password-feedback" id="passwordFeedback">
                  Password strength
                </div>

                <div class="requirements">
                  <div class="requirement" id="length">
                    <i class="far fa-circle"></i> At least 8 characters
                  </div>
                  <div class="requirement" id="uppercase">
                    <i class="far fa-circle"></i> At least one uppercase letter
                  </div>
                  <div class="requirement" id="lowercase">
                    <i class="far fa-circle"></i> At least one lowercase letter
                  </div>
                  <div class="requirement" id="number">
                    <i class="far fa-circle"></i> At least one number
                  </div>
                  <div class="requirement" id="special">
                    <i class="far fa-circle"></i> At least one special character
                  </div>
                </div>

                <div class="password-wrapper">
                  <input
                    type="password"
                    id="confirmPassword"
                    class="form-control"
                    placeholder="Confirm password"
                    name="confirmPassword"
                    required
                  />
                  <span class="toggle-password" toggle="#confirmPassword">
                    <i class="far fa-eye"></i>
                  </span>
                </div>

                <button type="submit" class="default-btn" id="submitBtn">
                  Reset Password
                </button>
              </form>
            </div>
          </section>
        </div>
      </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
      // Toggle password visibility
      const togglePassword = document.querySelectorAll(".toggle-password");
      togglePassword.forEach((button) => {
        button.addEventListener("click", function () {
          const input = document.querySelector(this.getAttribute("toggle"));
          if (input.type === "password") {
            input.type = "text";
            this.innerHTML = '<i class="far fa-eye-slash"></i>';
          } else {
            input.type = "password";
            this.innerHTML = '<i class="far fa-eye"></i>';
          }
        });
      });

      // Password strength checker
      const newPassword = document.getElementById("newPassword");
      const confirmPassword = document.getElementById("confirmPassword");
      const strengthMeter = document.getElementById("strengthMeter");
      const passwordFeedback = document.getElementById("passwordFeedback");
      const submitBtn = document.getElementById("submitBtn");

      const requirements = {
        length: document.getElementById("length"),
        uppercase: document.getElementById("uppercase"),
        lowercase: document.getElementById("lowercase"),
        number: document.getElementById("number"),
        special: document.getElementById("special"),
      };

      newPassword.addEventListener("input", function () {
        const password = this.value;
        let strength = 0;

        // Check requirements
        const hasLength = password.length >= 8;
        const hasUppercase = /[A-Z]/.test(password);
        const hasLowercase = /[a-z]/.test(password);
        const hasNumber = /[0-9]/.test(password);
        const hasSpecial = /[^A-Za-z0-9]/.test(password);

        // Update requirement indicators
        updateRequirement(requirements.length, hasLength);
        updateRequirement(requirements.uppercase, hasUppercase);
        updateRequirement(requirements.lowercase, hasLowercase);
        updateRequirement(requirements.number, hasNumber);
        updateRequirement(requirements.special, hasSpecial);

        // Calculate strength
        if (hasLength) strength += 20;
        if (hasUppercase) strength += 20;
        if (hasLowercase) strength += 20;
        if (hasNumber) strength += 20;
        if (hasSpecial) strength += 20;

        // Update strength meter
        strengthMeter.style.width = strength + "%";

        if (strength < 40) {
          strengthMeter.className = "password-strength-meter weak";
          passwordFeedback.innerText = "Weak password";
          passwordFeedback.style.color = "#dc3545";
        } else if (strength < 80) {
          strengthMeter.className = "password-strength-meter medium";
          passwordFeedback.innerText = "Medium strength password";
          passwordFeedback.style.color = "#ffc107";
        } else {
          strengthMeter.className = "password-strength-meter strong";
          passwordFeedback.innerText = "Strong password";
          passwordFeedback.style.color = "#28a745";
        }

        validateForm();
      });

      confirmPassword.addEventListener("input", validateForm);

      function updateRequirement(element, valid) {
        if (valid) {
          element.className = "requirement valid";
          element.querySelector("i").className = "fas fa-check-circle";
        } else {
          element.className = "requirement invalid";
          element.querySelector("i").className = "far fa-circle";
        }
      }

      function validateForm() {
        const password = newPassword.value;
        const confirm = confirmPassword.value;

        // Check if passwords match
        if (confirm && password !== confirm) {
          confirmPassword.style.borderColor = "#dc3545";
          submitBtn.disabled = true;
        } else if (confirm) {
          confirmPassword.style.borderColor = "#28a745";
          submitBtn.disabled = password.length < 8;
        } else {
          confirmPassword.style.borderColor = "#e8e8e8";
          submitBtn.disabled = password.length < 8;
        }
      }
    </script>
  </body>
</html>
