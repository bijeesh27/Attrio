<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <title>Attiro Fashions</title>
    <link rel="icon" type="image/png" href="user/assets/img/favicon.png" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link rel="stylesheet" href="/user/assets/css/substyle.css" />
  </head>
  <body>

    <% if (error_msg && error_msg.length > 0) { %>
        <div class="flash-message error-message" id="flash-message">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="feather feather-alert-circle"
          >
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="8" x2="12" y2="12"></line>
            <line x1="12" y1="16" x2="12.01" y2="16"></line>
          </svg>
          <span><%= error_msg %></span>
        </div>
        <% } %> <% if (success_msg && success_msg.length > 0) { %>
        <div class="flash-message success-message" id="flash-message">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="feather feather-check-circle"
          >
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
          </svg>
          <span><%= success_msg %></span>
        </div>
        <%}%>
    <div class="bg-wrapper">
      <div class="blur-overlay">
        <div class="login-container">
          <section class="login-area">
            <div class="login-content">
              <h2>Create Your Account</h2>

              <% if (locals.errors && errors.length > 0) { %>
              <div class="alert alert-danger">
                <% errors.forEach(error => { %>
                <div><%= error %></div>
                <% }) %>
              </div>
              <% } %>

              <a href="/auth/google" class="google-btn">
                <span class="google-icon"><i class="fab fa-google"></i></span>
                <span>Sign up with Google</span>
              </a>

              <div class="divider">
                <span>OR</span>
              </div>

              <form
                id="registerForm"
                class="login-form"
                action="/register"
                method="post"
                novalidate
              >
                <div class="form-group">
                  <input
                    type="text"
                    class="form-control"
                    id="username"
                    placeholder="Enter your Name"
                    name="username"
                    value="<%= locals.input ? input.username : '' %>"
                  />
                  <small id="nameError" class="error-text"
                    >Name is required</small
                  >
                </div>

                <div class="form-group">
                  <input
                    type="email"
                    class="form-control"
                    id="email"
                    placeholder="Enter your email Address"
                    name="email"
                    value="<%= locals.input ? input.email : '' %>"
                  />
                  <small id="emailError" class="error-text"
                    >Please enter a valid email address</small
                  >
                </div>

                <div class="form-group">
                  <input
                    type="tel"
                    class="form-control"
                    id="number"
                    placeholder="Enter your number"
                    name="number"
                    value="<%= locals.input ? input.number : '' %>"
                  />
                  <small id="numberError" class="error-text"
                    >Please enter a valid phone number</small
                  >
                </div>

                <div class="form-group">
                  <input
                    type="password"
                    class="form-control"
                    id="password"
                    placeholder="Enter your password"
                    name="password"
                  />
                  <small id="passwordError" class="error-text"
                    >Password must be at least 6 characters</small
                  >
                </div>

                <div class="form-group">
                  <input
                    type="password"
                    class="form-control"
                    id="confirmPassword"
                    placeholder="Confirm Password"
                    name="confirmPassword"
                  />
                  <small id="confirmPasswordError" class="error-text"
                    >Passwords do not match</small
                  >
                </div>

                <button type="submit" class="default-btn">SignUp</button>
                <a href="/login" class="forgot-password register-link"
                  >Do you have an account? Login</a
                >
              </form>
            </div>
          </section>
        </div>
      </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("registerForm");
        const username = document.getElementById("username");
        const email = document.getElementById("email");
        const number = document.getElementById("number");
        const password = document.getElementById("password");
        const confirmPassword = document.getElementById("confirmPassword");

        const nameError = document.getElementById("nameError");
        const emailError = document.getElementById("emailError");
        const numberError = document.getElementById("numberError");
        const passwordError = document.getElementById("passwordError");
        const confirmPasswordError = document.getElementById(
          "confirmPasswordError"
        );

        // Function to validate email
        function isValidEmail(email) {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          return emailRegex.test(email);
        }

        // Function to validate phone number
        function isValidPhoneNumber(phone) {
          const phoneRegex = /^\d{10}$/;
          return phoneRegex.test(phone);
        }

        // Function to show error
        function showError(input, errorElement, message) {
          input.classList.add("is-invalid");
          errorElement.style.display = "block";
          errorElement.textContent = message;
        }

        // Function to hide error
        function hideError(input, errorElement) {
          input.classList.remove("is-invalid");
          errorElement.style.display = "none";
        }

        // Username validation
        username.addEventListener("blur", function () {
          if (username.value.trim() === "") {
            showError(username, nameError, "Name is required");
          } else if (username.value.trim().length < 3) {
            showError(
              username,
              nameError,
              "Name must be at least 3 characters"
            );
          } else {
            hideError(username, nameError);
          }
        });

        // Email validation
        email.addEventListener("blur", function () {
          if (email.value.trim() === "") {
            showError(email, emailError, "Email is required");
          } else if (!isValidEmail(email.value)) {
            showError(email, emailError, "Please enter a valid email address");
          } else {
            hideError(email, emailError);
          }
        });

        // Phone number validation
        number.addEventListener("blur", function () {
          if (number.value.trim() === "") {
            showError(number, numberError, "Phone number is required");
          } else if (!isValidPhoneNumber(number.value)) {
            showError(
              number,
              numberError,
              "Please enter a valid 10 digit phone number"
            );
          } else {
            hideError(number, numberError);
          }
        });

        // Password validation
        password.addEventListener("blur", function () {
          if (password.value.trim() === "") {
            showError(password, passwordError, "Password is required");
          } else if (password.value.length < 6) {
            showError(
              password,
              passwordError,
              "Password must be at least 6 characters"
            );
          } else {
            hideError(password, passwordError);
          }

          // Also check confirm password match if it has a value
          if (confirmPassword.value.trim() !== "") {
            if (password.value !== confirmPassword.value) {
              showError(
                confirmPassword,
                confirmPasswordError,
                "Passwords do not match"
              );
            } else {
              hideError(confirmPassword, confirmPasswordError);
            }
          }
        });

        // Confirm password validation
        confirmPassword.addEventListener("blur", function () {
          if (confirmPassword.value.trim() === "") {
            showError(
              confirmPassword,
              confirmPasswordError,
              "Please confirm your password"
            );
          } else if (password.value !== confirmPassword.value) {
            showError(
              confirmPassword,
              confirmPasswordError,
              "Passwords do not match"
            );
          } else {
            hideError(confirmPassword, confirmPasswordError);
          }
        });

        // Form submission
        form.addEventListener("submit", function (e) {
          let isValid = true;

          // Validate username
          if (username.value.trim() === "") {
            showError(username, nameError, "Name is required");
            isValid = false;
          } else if (username.value.trim().length < 3) {
            showError(
              username,
              nameError,
              "Name must be at least 3 characters"
            );
            isValid = false;
          } else {
            hideError(username, nameError);
          }

          // Validate email
          if (email.value.trim() === "") {
            showError(email, emailError, "Email is required");
            isValid = false;
          } else if (!isValidEmail(email.value)) {
            showError(email, emailError, "Please enter a valid email address");
            isValid = false;
          } else {
            hideError(email, emailError);
          }

          // Validate phone number
          if (number.value.trim() === "") {
            showError(number, numberError, "Phone number is required");
            isValid = false;
          } else if (!isValidPhoneNumber(number.value)) {
            showError(
              number,
              numberError,
              "Please enter a valid 10 digit phone number"
            );
            isValid = false;
          } else {
            hideError(number, numberError);
          }

          // Validate password
          if (password.value.trim() === "") {
            showError(password, passwordError, "Password is required");
            isValid = false;
          } else if (password.value.length < 6) {
            showError(
              password,
              passwordError,
              "Password must be at least 6 characters"
            );
            isValid = false;
          } else {
            hideError(password, passwordError);
          }

          // Validate confirm password
          if (confirmPassword.value.trim() === "") {
            showError(
              confirmPassword,
              confirmPasswordError,
              "Please confirm your password"
            );
            isValid = false;
          } else if (password.value !== confirmPassword.value) {
            showError(
              confirmPassword,
              confirmPasswordError,
              "Passwords do not match"
            );
            isValid = false;
          } else {
            hideError(confirmPassword, confirmPasswordError);
          }

          // Prevent form submission if validation fails
          if (!isValid) {
            e.preventDefault();
          }
        });

        // Clear errors when inputs change
        username.addEventListener("input", function () {
          hideError(username, nameError);
        });

        email.addEventListener("input", function () {
          hideError(email, emailError);
        });

        number.addEventListener("input", function () {
          hideError(number, numberError);
        });

        password.addEventListener("input", function () {
          hideError(password, passwordError);

          // Also check confirm password match if it has a value
          if (confirmPassword.value.trim() !== "") {
            if (password.value !== confirmPassword.value) {
              showError(
                confirmPassword,
                confirmPasswordError,
                "Passwords do not match"
              );
            } else {
              hideError(confirmPassword, confirmPasswordError);
            }
          }
        });

        confirmPassword.addEventListener("input", function () {
          if (password.value !== confirmPassword.value) {
            showError(
              confirmPassword,
              confirmPasswordError,
              "Passwords do not match"
            );
          } else {
            hideError(confirmPassword, confirmPasswordError);
          }
        });
      });
      function removeFlashMessage() {
        const flashMessage = document.getElementById("flash-message");
        if (flashMessage) {
          setTimeout(() => {
            flashMessage.remove();
          }, 3000);
        }
      }

      window.onload = removeFlashMessage;
    </script>
  </body>
</html>
